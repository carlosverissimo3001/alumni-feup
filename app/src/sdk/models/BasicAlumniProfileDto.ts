/* tslint:disable */
/* eslint-disable */
/**
 * API
 * API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GraduationDto } from './GraduationDto';
import {
    GraduationDtoFromJSON,
    GraduationDtoFromJSONTyped,
    GraduationDtoToJSON,
    GraduationDtoToJSONTyped,
} from './GraduationDto';
import type { CurrentRoleDto } from './CurrentRoleDto';
import {
    CurrentRoleDtoFromJSON,
    CurrentRoleDtoFromJSONTyped,
    CurrentRoleDtoToJSON,
    CurrentRoleDtoToJSONTyped,
} from './CurrentRoleDto';
import type { CompanyDto, ExtendedCompanyDto } from './CompanyDto';
import {
    CompanyDtoFromJSON,
    CompanyDtoFromJSONTyped,
    CompanyDtoToJSON,
    CompanyDtoToJSONTyped,
    ExtendedCompanyDtoFromJSON,
} from './CompanyDto';
import type { LocationGeo } from './LocationGeo';
import {
    LocationGeoFromJSON,
    LocationGeoFromJSONTyped,
    LocationGeoToJSON,
    LocationGeoToJSONTyped,
} from './LocationGeo';

/**
 * 
 * @export
 * @interface BasicAlumniProfileDto
 */
export interface BasicAlumniProfileDto {
    /**
     * 
     * @type {string}
     * @memberof BasicAlumniProfileDto
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof BasicAlumniProfileDto
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof BasicAlumniProfileDto
     */
    profilePictureUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof BasicAlumniProfileDto
     */
    linkedinUrl?: string;
    /**
     * The current role of the alumni - If the alumni is not active, this will be the last role
     * @type {CurrentRoleDto}
     * @memberof BasicAlumniProfileDto
     */
    role?: CurrentRoleDto;
    /**
     * The current company of the alumni
     * @type {CompanyDto}
     * @memberof BasicAlumniProfileDto
     */
    company?: CompanyDto;
    /**
     * The current location of the alumni
     * @type {LocationGeo}
     * @memberof BasicAlumniProfileDto
     */
    location?: LocationGeo;
    /**
     * The graduations of the alumni
     * @type {Array<GraduationDto>}
     * @memberof BasicAlumniProfileDto
     */
    graduations?: Array<GraduationDto>;
}

/**
 * Check if a given object implements the BasicAlumniProfileDto interface.
 */
export function instanceOfBasicAlumniProfileDto(value: object): value is BasicAlumniProfileDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function BasicAlumniProfileDtoFromJSON(json: any): BasicAlumniProfileDto {
    return BasicAlumniProfileDtoFromJSONTyped(json, false);
}

export function BasicAlumniProfileDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BasicAlumniProfileDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'profilePictureUrl': json['profilePictureUrl'] == null ? undefined : json['profilePictureUrl'],
        'linkedinUrl': json['linkedinUrl'] == null ? undefined : json['linkedinUrl'],
        'role': json['role'] == null ? undefined : CurrentRoleDtoFromJSON(json['role']),
        'company': json['company'] == null ? undefined : CompanyDtoFromJSON(json['company']),
        'location': json['location'] == null ? undefined : LocationGeoFromJSON(json['location']),
        'graduations': json['graduations'] == null ? undefined : ((json['graduations'] as Array<any>).map(GraduationDtoFromJSON)),
    };
}

export function BasicAlumniProfileDtoToJSON(json: any): BasicAlumniProfileDto {
    return BasicAlumniProfileDtoToJSONTyped(json, false);
}

export function BasicAlumniProfileDtoToJSONTyped(value?: BasicAlumniProfileDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'profilePictureUrl': value['profilePictureUrl'],
        'linkedinUrl': value['linkedinUrl'],
        'role': CurrentRoleDtoToJSON(value['role']),
        'company': CompanyDtoToJSON(value['company']),
        'location': LocationGeoToJSON(value['location']),
        'graduations': value['graduations'] == null ? undefined : ((value['graduations'] as Array<any>).map(GraduationDtoToJSON)),
    };
}

export class AlumniPastLocationsAndCompaniesDto {
    /**
     * @type {Array<ExtendedCompanyDto>}
     * @memberof AlumniPastLocationsAndCompaniesDto
     */
    Companies?: ExtendedCompanyDto[];
    
    /**
     * @type {Array<LocationGeo>}
     * @memberof AlumniPastLocationsAndCompaniesDto
     */
    Locations?: LocationGeo[];
  }

  export function AlumniPastLocationsAndCompaniesDtoFromJSON(json: any): AlumniPastLocationsAndCompaniesDto {
    return AlumniPastLocationsAndCompaniesDtoFromJSONTyped(json, false);
}

export function AlumniPastLocationsAndCompaniesDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlumniPastLocationsAndCompaniesDto {
    if (json == null) {
        return json;
    }
    return {
        'Companies': json['Companies'] == null ? undefined : ((json['Companies'] as Array<any>).map(ExtendedCompanyDtoFromJSON)),
        'Locations': json['Locations'] == null ? undefined : ((json['Locations'] as Array<any>).map(LocationGeoFromJSON)),
    };
}