/* tslint:disable */
/* eslint-disable */
/**
 * API
 * API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { JobClassificationChoiceVo } from './JobClassificationChoiceVo';
import {
    JobClassificationChoiceVoFromJSON,
    JobClassificationChoiceVoFromJSONTyped,
    JobClassificationChoiceVoToJSON,
    JobClassificationChoiceVoToJSONTyped,
} from './JobClassificationChoiceVo';

/**
 * 
 * @export
 * @interface JobClassificationMetadataVo
 */
export interface JobClassificationMetadataVo {
    /**
     * The top 3 choices that the llm provided for the job classification
     * @type {Array<JobClassificationChoiceVo>}
     * @memberof JobClassificationMetadataVo
     */
    choices?: Array<JobClassificationChoiceVo>;
    /**
     * The reasoning behind the choice
     * @type {string}
     * @memberof JobClassificationMetadataVo
     */
    reasoning?: string;
}

/**
 * Check if a given object implements the JobClassificationMetadataVo interface.
 */
export function instanceOfJobClassificationMetadataVo(value: object): value is JobClassificationMetadataVo {
    return true;
}

export function JobClassificationMetadataVoFromJSON(json: any): JobClassificationMetadataVo {
    return JobClassificationMetadataVoFromJSONTyped(json, false);
}

export function JobClassificationMetadataVoFromJSONTyped(json: any, ignoreDiscriminator: boolean): JobClassificationMetadataVo {
    if (json == null) {
        return json;
    }
    return {
        
        'choices': json['choices'] == null ? undefined : ((json['choices'] as Array<any>).map(JobClassificationChoiceVoFromJSON)),
        'reasoning': json['reasoning'] == null ? undefined : json['reasoning'],
    };
}

export function JobClassificationMetadataVoToJSON(json: any): JobClassificationMetadataVo {
    return JobClassificationMetadataVoToJSONTyped(json, false);
}

export function JobClassificationMetadataVoToJSONTyped(value?: JobClassificationMetadataVo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'choices': value['choices'] == null ? undefined : ((value['choices'] as Array<any>).map(JobClassificationChoiceVoToJSON)),
        'reasoning': value['reasoning'],
    };
}

