/* tslint:disable */
/* eslint-disable */
/**
 * API
 * API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FacultyListItemDto } from './FacultyListItemDto';
import {
    FacultyListItemDtoFromJSON,
    FacultyListItemDtoFromJSONTyped,
    FacultyListItemDtoToJSON,
    FacultyListItemDtoToJSONTyped,
} from './FacultyListItemDto';

/**
 * 
 * @export
 * @interface EducationListDto
 */
export interface EducationListDto {
    /**
     * The faculty list
     * @type {Array<FacultyListItemDto>}
     * @memberof EducationListDto
     */
    faculties: Array<FacultyListItemDto>;
    /**
     * The number of faculties, after applying the filters
     * @type {number}
     * @memberof EducationListDto
     */
    filteredCount: number;
    /**
     * The total number of faculties, regardless of filters
     * @type {number}
     * @memberof EducationListDto
     */
    count: number;
}

/**
 * Check if a given object implements the EducationListDto interface.
 */
export function instanceOfEducationListDto(value: object): value is EducationListDto {
    if (!('faculties' in value) || value['faculties'] === undefined) return false;
    if (!('filteredCount' in value) || value['filteredCount'] === undefined) return false;
    if (!('count' in value) || value['count'] === undefined) return false;
    return true;
}

export function EducationListDtoFromJSON(json: any): EducationListDto {
    return EducationListDtoFromJSONTyped(json, false);
}

export function EducationListDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): EducationListDto {
    if (json == null) {
        return json;
    }
    return {
        
        'faculties': ((json['faculties'] as Array<any>).map(FacultyListItemDtoFromJSON)),
        'filteredCount': json['filteredCount'],
        'count': json['count'],
    };
}

export function EducationListDtoToJSON(json: any): EducationListDto {
    return EducationListDtoToJSONTyped(json, false);
}

export function EducationListDtoToJSONTyped(value?: EducationListDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'faculties': ((value['faculties'] as Array<any>).map(FacultyListItemDtoToJSON)),
        'filteredCount': value['filteredCount'],
        'count': value['count'],
    };
}

