/* tslint:disable */
/* eslint-disable */
/**
 * API
 * API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ReviewLocation
 */
export interface ReviewLocation {
    /**
     * The id of the review
     * @type {string}
     * @memberof ReviewLocation
     */
    id: string;
    /**
     * The review
     * @type {object}
     * @memberof ReviewLocation
     */
    description: object;
    /**
     * The rating of the review
     * @type {number}
     * @memberof ReviewLocation
     */
    rating: number;
    /**
     * upvotes fo the review
     * @type {number}
     * @memberof ReviewLocation
     */
    upvotes: number;
    /**
     * downvvotes of the review
     * @type {number}
     * @memberof ReviewLocation
     */
    downvotes: number;
    /**
     * The location of the review
     * @type {object}
     * @memberof ReviewLocation
     */
    location?: object;
    /**
     * The date and time when the review was created
     * @type {Date}
     * @memberof ReviewLocation
     */
    createdAt?: Date;
}

/**
 * Check if a given object implements the ReviewLocation interface.
 */
export function instanceOfReviewLocation(value: object): value is ReviewLocation {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('rating' in value) || value['rating'] === undefined) return false;
    if (!('upvotes' in value) || value['upvotes'] === undefined) return false;
    if (!('downvotes' in value) || value['downvotes'] === undefined) return false;
    return true;
}

export function ReviewLocationFromJSON(json: any): ReviewLocation {
    return ReviewLocationFromJSONTyped(json, false);
}

export function ReviewLocationFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReviewLocation {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'description': json['description'],
        'rating': json['rating'],
        'upvotes': json['upvotes'],
        'downvotes': json['downvotes'],
        'location': json['Location'] == null ? undefined : json['Location'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
    };
}

export function ReviewLocationToJSON(json: any): ReviewLocation {
    return ReviewLocationToJSONTyped(json, false);
}

export function ReviewLocationToJSONTyped(value?: ReviewLocation | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'description': value['description'],
        'rating': value['rating'],
        'upvotes': value['upvotes'],
        'downvotes': value['downvotes'],
        'Location': value['location'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
    };
}

