/* tslint:disable */
/* eslint-disable */
/**
 * API
 * API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SeniorityClassificationVo
 */
export interface SeniorityClassificationVo {
    /**
     * The model that was used to classify the seniority level
     * @type {string}
     * @memberof SeniorityClassificationVo
     */
    model?: string;
    /**
     * The reasoning behind the classification
     * @type {string}
     * @memberof SeniorityClassificationVo
     */
    reasoning?: string;
    /**
     * The confidence of the classification
     * @type {number}
     * @memberof SeniorityClassificationVo
     */
    confidence?: number;
}

/**
 * Check if a given object implements the SeniorityClassificationVo interface.
 */
export function instanceOfSeniorityClassificationVo(value: object): value is SeniorityClassificationVo {
    return true;
}

export function SeniorityClassificationVoFromJSON(json: any): SeniorityClassificationVo {
    return SeniorityClassificationVoFromJSONTyped(json, false);
}

export function SeniorityClassificationVoFromJSONTyped(json: any, ignoreDiscriminator: boolean): SeniorityClassificationVo {
    if (json == null) {
        return json;
    }
    return {
        
        'model': json['model'] == null ? undefined : json['model'],
        'reasoning': json['reasoning'] == null ? undefined : json['reasoning'],
        'confidence': json['confidence'] == null ? undefined : json['confidence'],
    };
}

export function SeniorityClassificationVoToJSON(json: any): SeniorityClassificationVo {
    return SeniorityClassificationVoToJSONTyped(json, false);
}

export function SeniorityClassificationVoToJSONTyped(value?: SeniorityClassificationVo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'model': value['model'],
        'reasoning': value['reasoning'],
        'confidence': value['confidence'],
    };
}

