/* tslint:disable */
/* eslint-disable */
/**
 * API
 * API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GraduationDto
 */
export interface GraduationDto {
    /**
     * 
     * @type {number}
     * @memberof GraduationDto
     */
    conclusionYear: number;
    /**
     * 
     * @type {string}
     * @memberof GraduationDto
     */
    acronym: string;
    /**
     * 
     * @type {string}
     * @memberof GraduationDto
     */
    facultyAcronym: string;
}

/**
 * Check if a given object implements the GraduationDto interface.
 */
export function instanceOfGraduationDto(value: object): value is GraduationDto {
    if (!('conclusionYear' in value) || value['conclusionYear'] === undefined) return false;
    if (!('acronym' in value) || value['acronym'] === undefined) return false;
    if (!('facultyAcronym' in value) || value['facultyAcronym'] === undefined) return false;
    return true;
}

export function GraduationDtoFromJSON(json: any): GraduationDto {
    return GraduationDtoFromJSONTyped(json, false);
}

export function GraduationDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GraduationDto {
    if (json == null) {
        return json;
    }
    return {
        
        'conclusionYear': json['conclusionYear'],
        'acronym': json['acronym'],
        'facultyAcronym': json['facultyAcronym'],
    };
}

export function GraduationDtoToJSON(json: any): GraduationDto {
    return GraduationDtoToJSONTyped(json, false);
}

export function GraduationDtoToJSONTyped(value?: GraduationDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'conclusionYear': value['conclusionYear'],
        'acronym': value['acronym'],
        'facultyAcronym': value['facultyAcronym'],
    };
}

