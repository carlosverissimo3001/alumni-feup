/* tslint:disable */
/* eslint-disable */
/**
 * API
 * API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CourseExtended
 */
export interface CourseExtended {
    /**
     * The id of the course
     * @type {string}
     * @memberof CourseExtended
     */
    id: string;
    /**
     * The name of the course
     * @type {string}
     * @memberof CourseExtended
     */
    name: string;
    /**
     * The acronym of the course
     * @type {string}
     * @memberof CourseExtended
     */
    acronym: string;
    /**
     * The start year of the course
     * @type {number}
     * @memberof CourseExtended
     */
    startYear: number;
    /**
     * The end year of the course, if it is not active
     * @type {number}
     * @memberof CourseExtended
     */
    endYear?: number;
    /**
     * The status of the course
     * @type {string}
     * @memberof CourseExtended
     */
    status: CourseExtendedStatusEnum;
    /**
     * The faculty id of the course
     * @type {string}
     * @memberof CourseExtended
     */
    facultyId: string;
    /**
     * The name of the course in the international language
     * @type {string}
     * @memberof CourseExtended
     */
    nameInt?: string;
    /**
     * The type of the course
     * @type {string}
     * @memberof CourseExtended
     */
    courseType: CourseExtendedCourseTypeEnum;
}


/**
 * @export
 */
export const CourseExtendedStatusEnum = {
    Active: 'ACTIVE',
    Inactive: 'INACTIVE'
} as const;
export type CourseExtendedStatusEnum = typeof CourseExtendedStatusEnum[keyof typeof CourseExtendedStatusEnum];

/**
 * @export
 */
export const CourseExtendedCourseTypeEnum = {
    IntegratedMasters: 'INTEGRATED_MASTERS',
    Bachelors: 'BACHELORS',
    Masters: 'MASTERS',
    Doctorate: 'DOCTORATE'
} as const;
export type CourseExtendedCourseTypeEnum = typeof CourseExtendedCourseTypeEnum[keyof typeof CourseExtendedCourseTypeEnum];


/**
 * Check if a given object implements the CourseExtended interface.
 */
export function instanceOfCourseExtended(value: object): value is CourseExtended {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('acronym' in value) || value['acronym'] === undefined) return false;
    if (!('startYear' in value) || value['startYear'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('facultyId' in value) || value['facultyId'] === undefined) return false;
    if (!('courseType' in value) || value['courseType'] === undefined) return false;
    return true;
}

export function CourseExtendedFromJSON(json: any): CourseExtended {
    return CourseExtendedFromJSONTyped(json, false);
}

export function CourseExtendedFromJSONTyped(json: any, ignoreDiscriminator: boolean): CourseExtended {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'acronym': json['acronym'],
        'startYear': json['startYear'],
        'endYear': json['endYear'] == null ? undefined : json['endYear'],
        'status': json['status'],
        'facultyId': json['facultyId'],
        'nameInt': json['nameInt'] == null ? undefined : json['nameInt'],
        'courseType': json['courseType'],
    };
}

export function CourseExtendedToJSON(json: any): CourseExtended {
    return CourseExtendedToJSONTyped(json, false);
}

export function CourseExtendedToJSONTyped(value?: CourseExtended | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'acronym': value['acronym'],
        'startYear': value['startYear'],
        'endYear': value['endYear'],
        'status': value['status'],
        'facultyId': value['facultyId'],
        'nameInt': value['nameInt'],
        'courseType': value['courseType'],
    };
}

