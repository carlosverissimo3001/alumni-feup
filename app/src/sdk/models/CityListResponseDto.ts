/* tslint:disable */
/* eslint-disable */
/**
 * API
 * API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CityListItemDto } from './CityListItemDto';
import {
    CityListItemDtoFromJSON,
    CityListItemDtoFromJSONTyped,
    CityListItemDtoToJSON,
    CityListItemDtoToJSONTyped,
} from './CityListItemDto';

/**
 * 
 * @export
 * @interface CityListResponseDto
 */
export interface CityListResponseDto {
    /**
     * 
     * @type {Array<CityListItemDto>}
     * @memberof CityListResponseDto
     */
    cities: Array<CityListItemDto>;
    /**
     * The total number of cities in the database after applying the filters
     * @type {number}
     * @memberof CityListResponseDto
     */
    count: number;
}

/**
 * Check if a given object implements the CityListResponseDto interface.
 */
export function instanceOfCityListResponseDto(value: object): value is CityListResponseDto {
    if (!('cities' in value) || value['cities'] === undefined) return false;
    if (!('count' in value) || value['count'] === undefined) return false;
    return true;
}

export function CityListResponseDtoFromJSON(json: any): CityListResponseDto {
    return CityListResponseDtoFromJSONTyped(json, false);
}

export function CityListResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CityListResponseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'cities': ((json['cities'] as Array<any>).map(CityListItemDtoFromJSON)),
        'count': json['count'],
    };
}

export function CityListResponseDtoToJSON(json: any): CityListResponseDto {
    return CityListResponseDtoToJSONTyped(json, false);
}

export function CityListResponseDtoToJSONTyped(value?: CityListResponseDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'cities': ((value['cities'] as Array<any>).map(CityListItemDtoToJSON)),
        'count': value['count'],
    };
}

