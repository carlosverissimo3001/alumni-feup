/* tslint:disable */
/* eslint-disable */
/**
 * API
 * API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Role } from './Role';
import {
    RoleFromJSON,
    RoleFromJSONTyped,
    RoleToJSON,
    RoleToJSONTyped,
} from './Role';
import type { Graduation } from './Graduation';
import {
    GraduationFromJSON,
    GraduationFromJSONTyped,
    GraduationToJSON,
    GraduationToJSONTyped,
} from './Graduation';
import type { LocationGeo } from './LocationGeo';
import {
    LocationGeoFromJSON,
    LocationGeoFromJSONTyped,
    LocationGeoToJSON,
    LocationGeoToJSONTyped,
} from './LocationGeo';

/**
 * 
 * @export
 * @interface Alumni
 */
export interface Alumni {
    /**
     * The id of the alumni
     * @type {string}
     * @memberof Alumni
     */
    id: string;
    /**
     * The first name of the alumni
     * @type {string}
     * @memberof Alumni
     */
    firstName: string;
    /**
     * The last name of the alumni
     * @type {string}
     * @memberof Alumni
     */
    lastName: string;
    /**
     * The full name of the alumni
     * @type {string}
     * @memberof Alumni
     */
    fullName?: string;
    /**
     * The linkedin url of the alumni
     * @type {string}
     * @memberof Alumni
     */
    linkedinUrl?: string;
    /**
     * The profile picture of the alumni
     * @type {string}
     * @memberof Alumni
     */
    profilePictureUrl?: string;
    /**
     * The source of the alumni
     * @type {string}
     * @memberof Alumni
     */
    source?: AlumniSourceEnum;
    /**
     * The roles of the alumni
     * @type {Array<Role>}
     * @memberof Alumni
     */
    roles?: Array<Role>;
    /**
     * The current location of the alumni
     * @type {LocationGeo}
     * @memberof Alumni
     */
    location?: LocationGeo;
    /**
     * The graduation status(es) of the alumni
     * @type {Array<Graduation>}
     * @memberof Alumni
     */
    graduations?: Array<Graduation>;
}


/**
 * @export
 */
export const AlumniSourceEnum = {
    FormSubmission: 'FORM_SUBMISSION',
    AdminImport: 'ADMIN_IMPORT',
    HonoraryMember: 'HONORARY_MEMBER'
} as const;
export type AlumniSourceEnum = typeof AlumniSourceEnum[keyof typeof AlumniSourceEnum];


/**
 * Check if a given object implements the Alumni interface.
 */
export function instanceOfAlumni(value: object): value is Alumni {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('firstName' in value) || value['firstName'] === undefined) return false;
    if (!('lastName' in value) || value['lastName'] === undefined) return false;
    return true;
}

export function AlumniFromJSON(json: any): Alumni {
    return AlumniFromJSONTyped(json, false);
}

export function AlumniFromJSONTyped(json: any, ignoreDiscriminator: boolean): Alumni {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'firstName': json['firstName'],
        'lastName': json['lastName'],
        'fullName': json['fullName'] == null ? undefined : json['fullName'],
        'linkedinUrl': json['linkedinUrl'] == null ? undefined : json['linkedinUrl'],
        'profilePictureUrl': json['profilePictureUrl'] == null ? undefined : json['profilePictureUrl'],
        'source': json['source'] == null ? undefined : json['source'],
        'roles': json['Roles'] == null ? undefined : ((json['Roles'] as Array<any>).map(RoleFromJSON)),
        'location': json['Location'] == null ? undefined : LocationGeoFromJSON(json['Location']),
        'graduations': json['Graduations'] == null ? undefined : ((json['Graduations'] as Array<any>).map(GraduationFromJSON)),
    };
}

export function AlumniToJSON(json: any): Alumni {
    return AlumniToJSONTyped(json, false);
}

export function AlumniToJSONTyped(value?: Alumni | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'firstName': value['firstName'],
        'lastName': value['lastName'],
        'fullName': value['fullName'],
        'linkedinUrl': value['linkedinUrl'],
        'profilePictureUrl': value['profilePictureUrl'],
        'source': value['source'],
        'Roles': value['roles'] == null ? undefined : ((value['roles'] as Array<any>).map(RoleToJSON)),
        'Location': LocationGeoToJSON(value['location']),
        'Graduations': value['graduations'] == null ? undefined : ((value['graduations'] as Array<any>).map(GraduationToJSON)),
    };
}

