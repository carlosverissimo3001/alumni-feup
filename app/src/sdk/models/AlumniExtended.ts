/* tslint:disable */
/* eslint-disable */
/**
 * API
 * API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Role } from './Role';
import {
    RoleFromJSON,
    RoleFromJSONTyped,
    RoleToJSON,
    RoleToJSONTyped,
} from './Role';
import type { Graduation } from './Graduation';
import {
    GraduationFromJSON,
    GraduationFromJSONTyped,
    GraduationToJSON,
    GraduationToJSONTyped,
} from './Graduation';
import type { ReviewLocation } from './ReviewLocation';
import {
    ReviewLocationFromJSON,
    ReviewLocationFromJSONTyped,
    ReviewLocationToJSON,
    ReviewLocationToJSONTyped,
} from './ReviewLocation';
import type { ReviewCompany } from './ReviewCompany';
import {
    ReviewCompanyFromJSON,
    ReviewCompanyFromJSONTyped,
    ReviewCompanyToJSON,
    ReviewCompanyToJSONTyped,
} from './ReviewCompany';
import type { LocationGeo } from './LocationGeo';
import {
    LocationGeoFromJSON,
    LocationGeoFromJSONTyped,
    LocationGeoToJSON,
    LocationGeoToJSONTyped,
} from './LocationGeo';

/**
 * 
 * @export
 * @interface AlumniExtended
 */
export interface AlumniExtended {
    /**
     * The id of the alumni
     * @type {string}
     * @memberof AlumniExtended
     */
    id: string;
    /**
     * The first name of the alumni
     * @type {string}
     * @memberof AlumniExtended
     */
    firstName: string;
    /**
     * The last name of the alumni
     * @type {string}
     * @memberof AlumniExtended
     */
    lastName: string;
    /**
     * The full name of the alumni
     * @type {string}
     * @memberof AlumniExtended
     */
    fullName?: string;
    /**
     * The linkedin url of the alumni
     * @type {string}
     * @memberof AlumniExtended
     */
    linkedinUrl?: string;
    /**
     * The profile picture of the alumni
     * @type {string}
     * @memberof AlumniExtended
     */
    profilePictureUrl?: string;
    /**
     * The source of the alumni
     * @type {string}
     * @memberof AlumniExtended
     */
    source?: AlumniExtendedSourceEnum;
    /**
     * The roles of the alumni
     * @type {Array<Role>}
     * @memberof AlumniExtended
     */
    roles?: Array<Role>;
    /**
     * The reviews of the alumni
     * @type {Array<ReviewCompany>}
     * @memberof AlumniExtended
     */
    reviewsCompany?: Array<ReviewCompany>;
    /**
     * 
     * @type {Array<ReviewLocation>}
     * @memberof AlumniExtended
     */
    reviewsLocation?: Array<ReviewLocation>;
    /**
     * The current location of the alumni
     * @type {LocationGeo}
     * @memberof AlumniExtended
     */
    location?: LocationGeo;
    /**
     * The graduation status(es) of the alumni
     * @type {Array<Graduation>}
     * @memberof AlumniExtended
     */
    graduations?: Array<Graduation>;
    /**
     * Whether the alumni is in a group
     * @type {boolean}
     * @memberof AlumniExtended
     */
    isInGroup?: boolean;
    /**
     * Whether the alumni has a sigarra match
     * @type {boolean}
     * @memberof AlumniExtended
     */
    hasSigarraMatch?: boolean;
    /**
     * Whether the alumni submission has been reviewed by the admin
     * @type {boolean}
     * @memberof AlumniExtended
     */
    wasReviewed?: boolean;
    /**
     * The date and time the alumni submission was created
     * @type {Date}
     * @memberof AlumniExtended
     */
    createdAt?: Date;
    /**
     * The date and time the alumni submission was updated
     * @type {Date}
     * @memberof AlumniExtended
     */
    updatedAt?: Date;
}


/**
 * @export
 */
export const AlumniExtendedSourceEnum = {
    FormSubmission: 'FORM_SUBMISSION',
    AdminImport: 'ADMIN_IMPORT',
    HonoraryMember: 'HONORARY_MEMBER'
} as const;
export type AlumniExtendedSourceEnum = typeof AlumniExtendedSourceEnum[keyof typeof AlumniExtendedSourceEnum];


/**
 * Check if a given object implements the AlumniExtended interface.
 */
export function instanceOfAlumniExtended(value: object): value is AlumniExtended {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('firstName' in value) || value['firstName'] === undefined) return false;
    if (!('lastName' in value) || value['lastName'] === undefined) return false;
    return true;
}

export function AlumniExtendedFromJSON(json: any): AlumniExtended {
    return AlumniExtendedFromJSONTyped(json, false);
}

export function AlumniExtendedFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlumniExtended {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'firstName': json['firstName'],
        'lastName': json['lastName'],
        'fullName': json['fullName'] == null ? undefined : json['fullName'],
        'linkedinUrl': json['linkedinUrl'] == null ? undefined : json['linkedinUrl'],
        'profilePictureUrl': json['profilePictureUrl'] == null ? undefined : json['profilePictureUrl'],
        'source': json['source'] == null ? undefined : json['source'],
        'roles': json['Roles'] == null ? undefined : ((json['Roles'] as Array<any>).map(RoleFromJSON)),
        'reviewsCompany': json['ReviewsCompany'] == null ? undefined : ((json['ReviewsCompany'] as Array<any>).map(ReviewCompanyFromJSON)),
        'reviewsLocation': json['ReviewsLocation'] == null ? undefined : ((json['ReviewsLocation'] as Array<any>).map(ReviewLocationFromJSON)),
        'location': json['Location'] == null ? undefined : LocationGeoFromJSON(json['Location']),
        'graduations': json['Graduations'] == null ? undefined : ((json['Graduations'] as Array<any>).map(GraduationFromJSON)),
        'isInGroup': json['isInGroup'] == null ? undefined : json['isInGroup'],
        'hasSigarraMatch': json['hasSigarraMatch'] == null ? undefined : json['hasSigarraMatch'],
        'wasReviewed': json['wasReviewed'] == null ? undefined : json['wasReviewed'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
    };
}

export function AlumniExtendedToJSON(json: any): AlumniExtended {
    return AlumniExtendedToJSONTyped(json, false);
}

export function AlumniExtendedToJSONTyped(value?: AlumniExtended | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'firstName': value['firstName'],
        'lastName': value['lastName'],
        'fullName': value['fullName'],
        'linkedinUrl': value['linkedinUrl'],
        'profilePictureUrl': value['profilePictureUrl'],
        'source': value['source'],
        'Roles': value['roles'] == null ? undefined : ((value['roles'] as Array<any>).map(RoleToJSON)),
        'ReviewsCompany': value['reviewsCompany'] == null ? undefined : ((value['reviewsCompany'] as Array<any>).map(ReviewCompanyToJSON)),
        'ReviewsLocation': value['reviewsLocation'] == null ? undefined : ((value['reviewsLocation'] as Array<any>).map(ReviewLocationToJSON)),
        'Location': LocationGeoToJSON(value['location']),
        'Graduations': value['graduations'] == null ? undefined : ((value['graduations'] as Array<any>).map(GraduationToJSON)),
        'isInGroup': value['isInGroup'],
        'hasSigarraMatch': value['hasSigarraMatch'],
        'wasReviewed': value['wasReviewed'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
    };
}

