/* tslint:disable */
/* eslint-disable */
/**
 * API
 * API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ReviewGeoJSONFeature } from './ReviewGeoJSONFeature';
import {
    ReviewGeoJSONFeatureFromJSON,
    ReviewGeoJSONFeatureFromJSONTyped,
    ReviewGeoJSONFeatureToJSON,
    ReviewGeoJSONFeatureToJSONTyped,
} from './ReviewGeoJSONFeature';

/**
 * 
 * @export
 * @interface ReviewGeoJSONFeatureCollection
 */
export interface ReviewGeoJSONFeatureCollection {
    /**
     * 
     * @type {string}
     * @memberof ReviewGeoJSONFeatureCollection
     */
    type: string;
    /**
     * 
     * @type {Array<ReviewGeoJSONFeature>}
     * @memberof ReviewGeoJSONFeatureCollection
     */
    features: Array<ReviewGeoJSONFeature>;
}

/**
 * Check if a given object implements the ReviewGeoJSONFeatureCollection interface.
 */
export function instanceOfReviewGeoJSONFeatureCollection(value: object): value is ReviewGeoJSONFeatureCollection {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('features' in value) || value['features'] === undefined) return false;
    return true;
}

export function ReviewGeoJSONFeatureCollectionFromJSON(json: any): ReviewGeoJSONFeatureCollection {
    return ReviewGeoJSONFeatureCollectionFromJSONTyped(json, false);
}

export function ReviewGeoJSONFeatureCollectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReviewGeoJSONFeatureCollection {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'features': ((json['features'] as Array<any>).map(ReviewGeoJSONFeatureFromJSON)),
    };
}

export function ReviewGeoJSONFeatureCollectionToJSON(json: any): ReviewGeoJSONFeatureCollection {
    return ReviewGeoJSONFeatureCollectionToJSONTyped(json, false);
}

export function ReviewGeoJSONFeatureCollectionToJSONTyped(value?: ReviewGeoJSONFeatureCollection | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'features': ((value['features'] as Array<any>).map(ReviewGeoJSONFeatureToJSON)),
    };
}

