/* tslint:disable */
/* eslint-disable */
/**
 * API
 * API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CityOptionDto } from './CityOptionDto';
import {
    CityOptionDtoFromJSON,
    CityOptionDtoFromJSONTyped,
    CityOptionDtoToJSON,
    CityOptionDtoToJSONTyped,
} from './CityOptionDto';
import type { CompanyOptionDto } from './CompanyOptionDto';
import {
    CompanyOptionDtoFromJSON,
    CompanyOptionDtoFromJSONTyped,
    CompanyOptionDtoToJSON,
    CompanyOptionDtoToJSONTyped,
} from './CompanyOptionDto';
import type { RoleOptionDto } from './RoleOptionDto';
import {
    RoleOptionDtoFromJSON,
    RoleOptionDtoFromJSONTyped,
    RoleOptionDtoToJSON,
    RoleOptionDtoToJSONTyped,
} from './RoleOptionDto';
import type { CountryOptionDto } from './CountryOptionDto';
import {
    CountryOptionDtoFromJSON,
    CountryOptionDtoFromJSONTyped,
    CountryOptionDtoToJSON,
    CountryOptionDtoToJSONTyped,
} from './CountryOptionDto';
import type { IndustryOptionDto } from './IndustryOptionDto';
import {
    IndustryOptionDtoFromJSON,
    IndustryOptionDtoFromJSONTyped,
    IndustryOptionDtoToJSON,
    IndustryOptionDtoToJSONTyped,
} from './IndustryOptionDto';
import type { FacultyAnalyticsEntity } from './FacultyAnalyticsEntity';
import {
    FacultyAnalyticsEntityFromJSON,
    FacultyAnalyticsEntityFromJSONTyped,
    FacultyAnalyticsEntityToJSON,
    FacultyAnalyticsEntityToJSONTyped,
} from './FacultyAnalyticsEntity';
import type { AlumniOptionDto } from './AlumniOptionDto';
import {
    AlumniOptionDtoFromJSON,
    AlumniOptionDtoFromJSONTyped,
    AlumniOptionDtoToJSON,
    AlumniOptionDtoToJSONTyped,
} from './AlumniOptionDto';
import type { CourseAnalyticsEntity } from './CourseAnalyticsEntity';
import {
    CourseAnalyticsEntityFromJSON,
    CourseAnalyticsEntityFromJSONTyped,
    CourseAnalyticsEntityToJSON,
    CourseAnalyticsEntityToJSONTyped,
} from './CourseAnalyticsEntity';

/**
 * 
 * @export
 * @interface AnalyticsOptionsDto
 */
export interface AnalyticsOptionsDto {
    /**
     * The options for countries
     * @type {Array<CountryOptionDto>}
     * @memberof AnalyticsOptionsDto
     */
    countries?: Array<CountryOptionDto>;
    /**
     * The options for cities
     * @type {Array<CityOptionDto>}
     * @memberof AnalyticsOptionsDto
     */
    cities?: Array<CityOptionDto>;
    /**
     * The options for industries
     * @type {Array<IndustryOptionDto>}
     * @memberof AnalyticsOptionsDto
     */
    industries?: Array<IndustryOptionDto>;
    /**
     * The options for roles
     * @type {Array<RoleOptionDto>}
     * @memberof AnalyticsOptionsDto
     */
    roles?: Array<RoleOptionDto>;
    /**
     * The options for companies
     * @type {Array<CompanyOptionDto>}
     * @memberof AnalyticsOptionsDto
     */
    companies?: Array<CompanyOptionDto>;
    /**
     * The options for alumni
     * @type {Array<AlumniOptionDto>}
     * @memberof AnalyticsOptionsDto
     */
    alumni?: Array<AlumniOptionDto>;
    /**
     * The options for courses
     * @type {Array<CourseAnalyticsEntity>}
     * @memberof AnalyticsOptionsDto
     */
    courses?: Array<CourseAnalyticsEntity>;
    /**
     * The options for faculties
     * @type {Array<FacultyAnalyticsEntity>}
     * @memberof AnalyticsOptionsDto
     */
    faculties?: Array<FacultyAnalyticsEntity>;
}

/**
 * Check if a given object implements the AnalyticsOptionsDto interface.
 */
export function instanceOfAnalyticsOptionsDto(value: object): value is AnalyticsOptionsDto {
    return true;
}

export function AnalyticsOptionsDtoFromJSON(json: any): AnalyticsOptionsDto {
    return AnalyticsOptionsDtoFromJSONTyped(json, false);
}

export function AnalyticsOptionsDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnalyticsOptionsDto {
    if (json == null) {
        return json;
    }
    return {
        
        'countries': json['countries'] == null ? undefined : ((json['countries'] as Array<any>).map(CountryOptionDtoFromJSON)),
        'cities': json['cities'] == null ? undefined : ((json['cities'] as Array<any>).map(CityOptionDtoFromJSON)),
        'industries': json['industries'] == null ? undefined : ((json['industries'] as Array<any>).map(IndustryOptionDtoFromJSON)),
        'roles': json['roles'] == null ? undefined : ((json['roles'] as Array<any>).map(RoleOptionDtoFromJSON)),
        'companies': json['companies'] == null ? undefined : ((json['companies'] as Array<any>).map(CompanyOptionDtoFromJSON)),
        'alumni': json['alumni'] == null ? undefined : ((json['alumni'] as Array<any>).map(AlumniOptionDtoFromJSON)),
        'courses': json['courses'] == null ? undefined : ((json['courses'] as Array<any>).map(CourseAnalyticsEntityFromJSON)),
        'faculties': json['faculties'] == null ? undefined : ((json['faculties'] as Array<any>).map(FacultyAnalyticsEntityFromJSON)),
    };
}

export function AnalyticsOptionsDtoToJSON(json: any): AnalyticsOptionsDto {
    return AnalyticsOptionsDtoToJSONTyped(json, false);
}

export function AnalyticsOptionsDtoToJSONTyped(value?: AnalyticsOptionsDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'countries': value['countries'] == null ? undefined : ((value['countries'] as Array<any>).map(CountryOptionDtoToJSON)),
        'cities': value['cities'] == null ? undefined : ((value['cities'] as Array<any>).map(CityOptionDtoToJSON)),
        'industries': value['industries'] == null ? undefined : ((value['industries'] as Array<any>).map(IndustryOptionDtoToJSON)),
        'roles': value['roles'] == null ? undefined : ((value['roles'] as Array<any>).map(RoleOptionDtoToJSON)),
        'companies': value['companies'] == null ? undefined : ((value['companies'] as Array<any>).map(CompanyOptionDtoToJSON)),
        'alumni': value['alumni'] == null ? undefined : ((value['alumni'] as Array<any>).map(AlumniOptionDtoToJSON)),
        'courses': value['courses'] == null ? undefined : ((value['courses'] as Array<any>).map(CourseAnalyticsEntityToJSON)),
        'faculties': value['faculties'] == null ? undefined : ((value['faculties'] as Array<any>).map(FacultyAnalyticsEntityToJSON)),
    };
}

