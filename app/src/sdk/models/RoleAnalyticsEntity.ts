/* tslint:disable */
/* eslint-disable */
/**
 * API
 * API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { JobClassificationAnalyticsEntity } from './JobClassificationAnalyticsEntity';
import {
    JobClassificationAnalyticsEntityFromJSON,
    JobClassificationAnalyticsEntityFromJSONTyped,
    JobClassificationAnalyticsEntityToJSON,
    JobClassificationAnalyticsEntityToJSONTyped,
} from './JobClassificationAnalyticsEntity';
import type { CompanyAnalyticsEntity } from './CompanyAnalyticsEntity';
import {
    CompanyAnalyticsEntityFromJSON,
    CompanyAnalyticsEntityFromJSONTyped,
    CompanyAnalyticsEntityToJSON,
    CompanyAnalyticsEntityToJSONTyped,
} from './CompanyAnalyticsEntity';
import type { LocationAnalyticsEntity } from './LocationAnalyticsEntity';
import {
    LocationAnalyticsEntityFromJSON,
    LocationAnalyticsEntityFromJSONTyped,
    LocationAnalyticsEntityToJSON,
    LocationAnalyticsEntityToJSONTyped,
} from './LocationAnalyticsEntity';

/**
 * 
 * @export
 * @interface RoleAnalyticsEntity
 */
export interface RoleAnalyticsEntity {
    /**
     * 
     * @type {string}
     * @memberof RoleAnalyticsEntity
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof RoleAnalyticsEntity
     */
    alumniId: string;
    /**
     * 
     * @type {Date}
     * @memberof RoleAnalyticsEntity
     */
    startDate: Date;
    /**
     * 
     * @type {Date}
     * @memberof RoleAnalyticsEntity
     */
    endDate?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof RoleAnalyticsEntity
     */
    isCurrent: boolean;
    /**
     * 
     * @type {LocationAnalyticsEntity}
     * @memberof RoleAnalyticsEntity
     */
    location?: LocationAnalyticsEntity;
    /**
     * 
     * @type {CompanyAnalyticsEntity}
     * @memberof RoleAnalyticsEntity
     */
    company: CompanyAnalyticsEntity;
    /**
     * 
     * @type {string}
     * @memberof RoleAnalyticsEntity
     */
    seniorityLevel: RoleAnalyticsEntitySeniorityLevelEnum;
    /**
     * 
     * @type {JobClassificationAnalyticsEntity}
     * @memberof RoleAnalyticsEntity
     */
    jobClassification?: JobClassificationAnalyticsEntity;
}


/**
 * @export
 */
export const RoleAnalyticsEntitySeniorityLevelEnum = {
    Intern: 'INTERN',
    EntryLevel: 'ENTRY_LEVEL',
    Associate: 'ASSOCIATE',
    MidSeniorLevel: 'MID_SENIOR_LEVEL',
    Director: 'DIRECTOR',
    Executive: 'EXECUTIVE',
    CLevel: 'C_LEVEL'
} as const;
export type RoleAnalyticsEntitySeniorityLevelEnum = typeof RoleAnalyticsEntitySeniorityLevelEnum[keyof typeof RoleAnalyticsEntitySeniorityLevelEnum];


/**
 * Check if a given object implements the RoleAnalyticsEntity interface.
 */
export function instanceOfRoleAnalyticsEntity(value: object): value is RoleAnalyticsEntity {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('alumniId' in value) || value['alumniId'] === undefined) return false;
    if (!('startDate' in value) || value['startDate'] === undefined) return false;
    if (!('isCurrent' in value) || value['isCurrent'] === undefined) return false;
    if (!('company' in value) || value['company'] === undefined) return false;
    if (!('seniorityLevel' in value) || value['seniorityLevel'] === undefined) return false;
    return true;
}

export function RoleAnalyticsEntityFromJSON(json: any): RoleAnalyticsEntity {
    return RoleAnalyticsEntityFromJSONTyped(json, false);
}

export function RoleAnalyticsEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoleAnalyticsEntity {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'alumniId': json['alumniId'],
        'startDate': (new Date(json['startDate'])),
        'endDate': json['endDate'] == null ? undefined : (new Date(json['endDate'])),
        'isCurrent': json['isCurrent'],
        'location': json['location'] == null ? undefined : LocationAnalyticsEntityFromJSON(json['location']),
        'company': CompanyAnalyticsEntityFromJSON(json['company']),
        'seniorityLevel': json['seniorityLevel'],
        'jobClassification': json['jobClassification'] == null ? undefined : JobClassificationAnalyticsEntityFromJSON(json['jobClassification']),
    };
}

export function RoleAnalyticsEntityToJSON(json: any): RoleAnalyticsEntity {
    return RoleAnalyticsEntityToJSONTyped(json, false);
}

export function RoleAnalyticsEntityToJSONTyped(value?: RoleAnalyticsEntity | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'alumniId': value['alumniId'],
        'startDate': ((value['startDate']).toISOString()),
        'endDate': value['endDate'] == null ? undefined : ((value['endDate']).toISOString()),
        'isCurrent': value['isCurrent'],
        'location': LocationAnalyticsEntityToJSON(value['location']),
        'company': CompanyAnalyticsEntityToJSON(value['company']),
        'seniorityLevel': value['seniorityLevel'],
        'jobClassification': JobClassificationAnalyticsEntityToJSON(value['jobClassification']),
    };
}

