/* tslint:disable */
/* eslint-disable */
/**
 * API
 * API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DataPointDto } from './DataPointDto';
import {
    DataPointDtoFromJSON,
    DataPointDtoFromJSONTyped,
    DataPointDtoToJSON,
    DataPointDtoToJSONTyped,
} from './DataPointDto';

/**
 * 
 * @export
 * @interface RoleListItemDto
 */
export interface RoleListItemDto {
    /**
     * The name of the role
     * @type {string}
     * @memberof RoleListItemDto
     */
    name: string;
    /**
     * The level of classification of the role, 1-4 being ISCO-08 and 5+ being ESCO
     * @type {number}
     * @memberof RoleListItemDto
     */
    level: number;
    /**
     * The URL of the role in the ESCO classification tree
     * @type {string}
     * @memberof RoleListItemDto
     */
    escoUrl?: string;
    /**
     * The ESCO code of the role
     * @type {string}
     * @memberof RoleListItemDto
     */
    code: string;
    /**
     * The number of roles classified with this role
     * @type {number}
     * @memberof RoleListItemDto
     */
    count: number;
    /**
     * The trend of the role
     * @type {Array<DataPointDto>}
     * @memberof RoleListItemDto
     */
    trend: Array<DataPointDto>;
}

/**
 * Check if a given object implements the RoleListItemDto interface.
 */
export function instanceOfRoleListItemDto(value: object): value is RoleListItemDto {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('level' in value) || value['level'] === undefined) return false;
    if (!('code' in value) || value['code'] === undefined) return false;
    if (!('count' in value) || value['count'] === undefined) return false;
    if (!('trend' in value) || value['trend'] === undefined) return false;
    return true;
}

export function RoleListItemDtoFromJSON(json: any): RoleListItemDto {
    return RoleListItemDtoFromJSONTyped(json, false);
}

export function RoleListItemDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoleListItemDto {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'level': json['level'],
        'escoUrl': json['escoUrl'] == null ? undefined : json['escoUrl'],
        'code': json['code'],
        'count': json['count'],
        'trend': ((json['trend'] as Array<any>).map(DataPointDtoFromJSON)),
    };
}

export function RoleListItemDtoToJSON(json: any): RoleListItemDto {
    return RoleListItemDtoToJSONTyped(json, false);
}

export function RoleListItemDtoToJSONTyped(value?: RoleListItemDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'level': value['level'],
        'escoUrl': value['escoUrl'],
        'code': value['code'],
        'count': value['count'],
        'trend': ((value['trend'] as Array<any>).map(DataPointDtoToJSON)),
    };
}

