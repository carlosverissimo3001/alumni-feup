/* tslint:disable */
/* eslint-disable */
/**
 * API
 * API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LocationAnalyticsEntity } from './LocationAnalyticsEntity';
import {
    LocationAnalyticsEntityFromJSON,
    LocationAnalyticsEntityFromJSONTyped,
    LocationAnalyticsEntityToJSON,
    LocationAnalyticsEntityToJSONTyped,
} from './LocationAnalyticsEntity';
import type { RoleAnalyticsEntity } from './RoleAnalyticsEntity';
import {
    RoleAnalyticsEntityFromJSON,
    RoleAnalyticsEntityFromJSONTyped,
    RoleAnalyticsEntityToJSON,
    RoleAnalyticsEntityToJSONTyped,
} from './RoleAnalyticsEntity';
import type { GraduationAnalyticsEntity } from './GraduationAnalyticsEntity';
import {
    GraduationAnalyticsEntityFromJSON,
    GraduationAnalyticsEntityFromJSONTyped,
    GraduationAnalyticsEntityToJSON,
    GraduationAnalyticsEntityToJSONTyped,
} from './GraduationAnalyticsEntity';

/**
 * 
 * @export
 * @interface AlumniAnalyticsEntity
 */
export interface AlumniAnalyticsEntity {
    /**
     * The id of the alumni
     * @type {string}
     * @memberof AlumniAnalyticsEntity
     */
    id: string;
    /**
     * The full name of the alumni
     * @type {string}
     * @memberof AlumniAnalyticsEntity
     */
    fullName: string;
    /**
     * The linkedin url of the alumni
     * @type {string}
     * @memberof AlumniAnalyticsEntity
     */
    linkedinUrl?: string;
    /**
     * The profile picture of the alumni
     * @type {string}
     * @memberof AlumniAnalyticsEntity
     */
    profilePictureUrl: string;
    /**
     * The roles of the alumni
     * @type {Array<RoleAnalyticsEntity>}
     * @memberof AlumniAnalyticsEntity
     */
    roles?: Array<RoleAnalyticsEntity>;
    /**
     * The graduations of the alumni
     * @type {Array<GraduationAnalyticsEntity>}
     * @memberof AlumniAnalyticsEntity
     */
    graduations?: Array<GraduationAnalyticsEntity>;
    /**
     * The location of the alumni
     * @type {LocationAnalyticsEntity}
     * @memberof AlumniAnalyticsEntity
     */
    location?: LocationAnalyticsEntity;
}

/**
 * Check if a given object implements the AlumniAnalyticsEntity interface.
 */
export function instanceOfAlumniAnalyticsEntity(value: object): value is AlumniAnalyticsEntity {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('fullName' in value) || value['fullName'] === undefined) return false;
    if (!('profilePictureUrl' in value) || value['profilePictureUrl'] === undefined) return false;
    return true;
}

export function AlumniAnalyticsEntityFromJSON(json: any): AlumniAnalyticsEntity {
    return AlumniAnalyticsEntityFromJSONTyped(json, false);
}

export function AlumniAnalyticsEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlumniAnalyticsEntity {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'fullName': json['fullName'],
        'linkedinUrl': json['linkedinUrl'] == null ? undefined : json['linkedinUrl'],
        'profilePictureUrl': json['profilePictureUrl'],
        'roles': json['roles'] == null ? undefined : ((json['roles'] as Array<any>).map(RoleAnalyticsEntityFromJSON)),
        'graduations': json['graduations'] == null ? undefined : ((json['graduations'] as Array<any>).map(GraduationAnalyticsEntityFromJSON)),
        'location': json['location'] == null ? undefined : LocationAnalyticsEntityFromJSON(json['location']),
    };
}

export function AlumniAnalyticsEntityToJSON(json: any): AlumniAnalyticsEntity {
    return AlumniAnalyticsEntityToJSONTyped(json, false);
}

export function AlumniAnalyticsEntityToJSONTyped(value?: AlumniAnalyticsEntity | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'fullName': value['fullName'],
        'linkedinUrl': value['linkedinUrl'],
        'profilePictureUrl': value['profilePictureUrl'],
        'roles': value['roles'] == null ? undefined : ((value['roles'] as Array<any>).map(RoleAnalyticsEntityToJSON)),
        'graduations': value['graduations'] == null ? undefined : ((value['graduations'] as Array<any>).map(GraduationAnalyticsEntityToJSON)),
        'location': LocationAnalyticsEntityToJSON(value['location']),
    };
}

