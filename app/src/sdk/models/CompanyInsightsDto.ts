/* tslint:disable */
/* eslint-disable */
/**
 * API
 * API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { IndustryAnalyticsEntity } from './IndustryAnalyticsEntity';
import {
    IndustryAnalyticsEntityFromJSON,
    IndustryAnalyticsEntityFromJSONTyped,
    IndustryAnalyticsEntityToJSON,
    IndustryAnalyticsEntityToJSONTyped,
} from './IndustryAnalyticsEntity';
import type { COMPANYTYPE } from './COMPANYTYPE';
import {
    COMPANYTYPEFromJSON,
    COMPANYTYPEFromJSONTyped,
    COMPANYTYPEToJSON,
    COMPANYTYPEToJSONTyped,
} from './COMPANYTYPE';
import type { DataPointDto } from './DataPointDto';
import {
    DataPointDtoFromJSON,
    DataPointDtoFromJSONTyped,
    DataPointDtoToJSON,
    DataPointDtoToJSONTyped,
} from './DataPointDto';
import type { LocationGeo } from './LocationGeo';
import {
    LocationGeoFromJSON,
    LocationGeoFromJSONTyped,
    LocationGeoToJSON,
    LocationGeoToJSONTyped,
} from './LocationGeo';
import type { BasicGeoDto } from './BasicGeoDto';
import {
    BasicGeoDtoFromJSON,
    BasicGeoDtoFromJSONTyped,
    BasicGeoDtoToJSON,
    BasicGeoDtoToJSONTyped,
} from './BasicGeoDto';
import type { BasicRoleDto } from './BasicRoleDto';
import {
    BasicRoleDtoFromJSON,
    BasicRoleDtoFromJSONTyped,
    BasicRoleDtoToJSON,
    BasicRoleDtoToJSONTyped,
} from './BasicRoleDto';
import type { COMPANYSIZE } from './COMPANYSIZE';
import {
    COMPANYSIZEFromJSON,
    COMPANYSIZEFromJSONTyped,
    COMPANYSIZEToJSON,
    COMPANYSIZEToJSONTyped,
} from './COMPANYSIZE';
import type { BasicAlumniDto } from './BasicAlumniDto';
import {
    BasicAlumniDtoFromJSON,
    BasicAlumniDtoFromJSONTyped,
    BasicAlumniDtoToJSON,
    BasicAlumniDtoToJSONTyped,
} from './BasicAlumniDto';
import type { BasicCompanyDto } from './BasicCompanyDto';
import {
    BasicCompanyDtoFromJSON,
    BasicCompanyDtoFromJSONTyped,
    BasicCompanyDtoToJSON,
    BasicCompanyDtoToJSONTyped,
} from './BasicCompanyDto';

/**
 * 
 * @export
 * @interface CompanyInsightsDto
 */
export interface CompanyInsightsDto {
    /**
     * The id of the company
     * @type {string}
     * @memberof CompanyInsightsDto
     */
    id: string;
    /**
     * The name of the company
     * @type {string}
     * @memberof CompanyInsightsDto
     */
    name: string;
    /**
     * The logo of the company
     * @type {string}
     * @memberof CompanyInsightsDto
     */
    logo?: string;
    /**
     * The linkedin url of the company
     * @type {string}
     * @memberof CompanyInsightsDto
     */
    linkedinUrl?: string;
    /**
     * The headquarters of the company
     * @type {LocationGeo}
     * @memberof CompanyInsightsDto
     */
    headquarters?: LocationGeo;
    /**
     * The size of the company
     * @type {COMPANYSIZE}
     * @memberof CompanyInsightsDto
     */
    companySize?: COMPANYSIZE | null;
    /**
     * The type of the company
     * @type {COMPANYTYPE}
     * @memberof CompanyInsightsDto
     */
    companyType?: COMPANYTYPE | null;
    /**
     * Was the company founded by an alumni
     * @type {boolean}
     * @memberof CompanyInsightsDto
     */
    foundedByAlumni: boolean;
    /**
     * The founded year of the company
     * @type {string}
     * @memberof CompanyInsightsDto
     */
    founded?: string;
    /**
     * The website of the company
     * @type {string}
     * @memberof CompanyInsightsDto
     */
    website?: string;
    /**
     * The industry of the company
     * @type {IndustryAnalyticsEntity}
     * @memberof CompanyInsightsDto
     */
    industry?: IndustryAnalyticsEntity;
    /**
     * The similar companies of the company, whether by industry, # of employees, etc.
     * @type {Array<BasicCompanyDto>}
     * @memberof CompanyInsightsDto
     */
    similarCompanies?: Array<BasicCompanyDto>;
    /**
     * The average YOE of the current employees
     * @type {number}
     * @memberof CompanyInsightsDto
     */
    averageYOE: number;
    /**
     * The average length of employment in company
     * @type {string}
     * @memberof CompanyInsightsDto
     */
    averageYOC: string;
    /**
     * The roles of the company
     * @type {Array<BasicRoleDto>}
     * @memberof CompanyInsightsDto
     */
    roles: Array<BasicRoleDto>;
    /**
     * The alumni of the company
     * @type {Array<BasicAlumniDto>}
     * @memberof CompanyInsightsDto
     */
    currentAlumni: Array<BasicAlumniDto>;
    /**
     * The past alumni of the company
     * @type {Array<BasicAlumniDto>}
     * @memberof CompanyInsightsDto
     */
    alumni: Array<BasicAlumniDto>;
    /**
     * The countries where alumni that work for the company are located
     * @type {Array<BasicGeoDto>}
     * @memberof CompanyInsightsDto
     */
    countries: Array<BasicGeoDto>;
    /**
     * The cities where alumni that work for the company are located
     * @type {Array<BasicGeoDto>}
     * @memberof CompanyInsightsDto
     */
    cities: Array<BasicGeoDto>;
    /**
     * The trend of the company
     * @type {Array<DataPointDto>}
     * @memberof CompanyInsightsDto
     */
    alumniTrend: Array<DataPointDto>;
    /**
     * The average trend of the company
     * @type {Array<DataPointDto>}
     * @memberof CompanyInsightsDto
     */
    averageTrend: Array<DataPointDto>;
    /**
     * The trend of companies in the same industry
     * @type {Array<DataPointDto>}
     * @memberof CompanyInsightsDto
     */
    industryTrend: Array<DataPointDto>;
    /**
     * The most common migration paths
     * @type {Array<string>}
     * @memberof CompanyInsightsDto
     */
    migrations: Array<string>;
}



/**
 * Check if a given object implements the CompanyInsightsDto interface.
 */
export function instanceOfCompanyInsightsDto(value: object): value is CompanyInsightsDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('foundedByAlumni' in value) || value['foundedByAlumni'] === undefined) return false;
    if (!('averageYOE' in value) || value['averageYOE'] === undefined) return false;
    if (!('averageYOC' in value) || value['averageYOC'] === undefined) return false;
    if (!('roles' in value) || value['roles'] === undefined) return false;
    if (!('currentAlumni' in value) || value['currentAlumni'] === undefined) return false;
    if (!('alumni' in value) || value['alumni'] === undefined) return false;
    if (!('countries' in value) || value['countries'] === undefined) return false;
    if (!('cities' in value) || value['cities'] === undefined) return false;
    if (!('alumniTrend' in value) || value['alumniTrend'] === undefined) return false;
    if (!('averageTrend' in value) || value['averageTrend'] === undefined) return false;
    if (!('industryTrend' in value) || value['industryTrend'] === undefined) return false;
    if (!('migrations' in value) || value['migrations'] === undefined) return false;
    return true;
}

export function CompanyInsightsDtoFromJSON(json: any): CompanyInsightsDto {
    return CompanyInsightsDtoFromJSONTyped(json, false);
}

export function CompanyInsightsDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CompanyInsightsDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'logo': json['logo'] == null ? undefined : json['logo'],
        'linkedinUrl': json['linkedinUrl'] == null ? undefined : json['linkedinUrl'],
        'headquarters': json['headquarters'] == null ? undefined : LocationGeoFromJSON(json['headquarters']),
        'companySize': json['companySize'] == null ? undefined : COMPANYSIZEFromJSON(json['companySize']),
        'companyType': json['companyType'] == null ? undefined : COMPANYTYPEFromJSON(json['companyType']),
        'foundedByAlumni': json['foundedByAlumni'],
        'founded': json['founded'] == null ? undefined : json['founded'],
        'website': json['website'] == null ? undefined : json['website'],
        'industry': json['industry'] == null ? undefined : IndustryAnalyticsEntityFromJSON(json['industry']),
        'similarCompanies': json['similarCompanies'] == null ? undefined : ((json['similarCompanies'] as Array<any>).map(BasicCompanyDtoFromJSON)),
        'averageYOE': json['averageYOE'],
        'averageYOC': json['averageYOC'],
        'roles': ((json['roles'] as Array<any>).map(BasicRoleDtoFromJSON)),
        'currentAlumni': ((json['currentAlumni'] as Array<any>).map(BasicAlumniDtoFromJSON)),
        'alumni': ((json['alumni'] as Array<any>).map(BasicAlumniDtoFromJSON)),
        'countries': ((json['countries'] as Array<any>).map(BasicGeoDtoFromJSON)),
        'cities': ((json['cities'] as Array<any>).map(BasicGeoDtoFromJSON)),
        'alumniTrend': ((json['alumniTrend'] as Array<any>).map(DataPointDtoFromJSON)),
        'averageTrend': ((json['averageTrend'] as Array<any>).map(DataPointDtoFromJSON)),
        'industryTrend': ((json['industryTrend'] as Array<any>).map(DataPointDtoFromJSON)),
        'migrations': json['migrations'],
    };
}

export function CompanyInsightsDtoToJSON(json: any): CompanyInsightsDto {
    return CompanyInsightsDtoToJSONTyped(json, false);
}

export function CompanyInsightsDtoToJSONTyped(value?: CompanyInsightsDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'logo': value['logo'],
        'linkedinUrl': value['linkedinUrl'],
        'headquarters': LocationGeoToJSON(value['headquarters']),
        'companySize': COMPANYSIZEToJSON(value['companySize']),
        'companyType': COMPANYTYPEToJSON(value['companyType']),
        'foundedByAlumni': value['foundedByAlumni'],
        'founded': value['founded'],
        'website': value['website'],
        'industry': IndustryAnalyticsEntityToJSON(value['industry']),
        'similarCompanies': value['similarCompanies'] == null ? undefined : ((value['similarCompanies'] as Array<any>).map(BasicCompanyDtoToJSON)),
        'averageYOE': value['averageYOE'],
        'averageYOC': value['averageYOC'],
        'roles': ((value['roles'] as Array<any>).map(BasicRoleDtoToJSON)),
        'currentAlumni': ((value['currentAlumni'] as Array<any>).map(BasicAlumniDtoToJSON)),
        'alumni': ((value['alumni'] as Array<any>).map(BasicAlumniDtoToJSON)),
        'countries': ((value['countries'] as Array<any>).map(BasicGeoDtoToJSON)),
        'cities': ((value['cities'] as Array<any>).map(BasicGeoDtoToJSON)),
        'alumniTrend': ((value['alumniTrend'] as Array<any>).map(DataPointDtoToJSON)),
        'averageTrend': ((value['averageTrend'] as Array<any>).map(DataPointDtoToJSON)),
        'industryTrend': ((value['industryTrend'] as Array<any>).map(DataPointDtoToJSON)),
        'migrations': value['migrations'],
    };
}

