/* tslint:disable */
/* eslint-disable */
/**
 * API
 * API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  LinkedinAuthDto,
  UserAuthResponse,
} from '../models/index';
import {
    LinkedinAuthDtoFromJSON,
    LinkedinAuthDtoToJSON,
    UserAuthResponseFromJSON,
    UserAuthResponseToJSON,
} from '../models/index';

export interface UserControllerLinkedinAuthRequest {
    linkedinAuthDto: LinkedinAuthDto;
}

/**
 * UserApi - interface
 * 
 * @export
 * @interface UserApiInterface
 */
export interface UserApiInterface {
    /**
     * 
     * @summary Authenticate a user with LinkedIn
     * @param {LinkedinAuthDto} linkedinAuthDto 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserApiInterface
     */
    userControllerLinkedinAuthRaw(requestParameters: UserControllerLinkedinAuthRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserAuthResponse>>;

    /**
     * Authenticate a user with LinkedIn
     */
    userControllerLinkedinAuth(requestParameters: UserControllerLinkedinAuthRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserAuthResponse>;

}

/**
 * 
 */
export class UserApi extends runtime.BaseAPI implements UserApiInterface {

    /**
     * Authenticate a user with LinkedIn
     */
    async userControllerLinkedinAuthRaw(requestParameters: UserControllerLinkedinAuthRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserAuthResponse>> {
        if (requestParameters['linkedinAuthDto'] == null) {
            throw new runtime.RequiredError(
                'linkedinAuthDto',
                'Required parameter "linkedinAuthDto" was null or undefined when calling userControllerLinkedinAuth().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/user/linkedinAuth`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: LinkedinAuthDtoToJSON(requestParameters['linkedinAuthDto']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UserAuthResponseFromJSON(jsonValue));
    }

    /**
     * Authenticate a user with LinkedIn
     */
    async userControllerLinkedinAuth(requestParameters: UserControllerLinkedinAuthRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserAuthResponse> {
        const response = await this.userControllerLinkedinAuthRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
