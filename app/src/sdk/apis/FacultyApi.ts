/* tslint:disable */
/* eslint-disable */
/**
 * API
 * API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AddFacultyDto,
  Faculty,
} from '../models/index';
import {
    AddFacultyDtoFromJSON,
    AddFacultyDtoToJSON,
    FacultyFromJSON,
    FacultyToJSON,
} from '../models/index';

export interface FacultyControllerCreateRequest {
    addFacultyDto: AddFacultyDto;
}

/**
 * FacultyApi - interface
 * 
 * @export
 * @interface FacultyApiInterface
 */
export interface FacultyApiInterface {
    /**
     * 
     * @summary Create a faculty
     * @param {AddFacultyDto} addFacultyDto 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FacultyApiInterface
     */
    facultyControllerCreateRaw(requestParameters: FacultyControllerCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Faculty>>;

    /**
     * Create a faculty
     */
    facultyControllerCreate(requestParameters: FacultyControllerCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Faculty>;

    /**
     * 
     * @summary Get all faculties
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FacultyApiInterface
     */
    facultyControllerFindAllRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Faculty>>>;

    /**
     * Get all faculties
     */
    facultyControllerFindAll(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Faculty>>;

}

/**
 * 
 */
export class FacultyApi extends runtime.BaseAPI implements FacultyApiInterface {

    /**
     * Create a faculty
     */
    async facultyControllerCreateRaw(requestParameters: FacultyControllerCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Faculty>> {
        if (requestParameters['addFacultyDto'] == null) {
            throw new runtime.RequiredError(
                'addFacultyDto',
                'Required parameter "addFacultyDto" was null or undefined when calling facultyControllerCreate().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/faculty`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AddFacultyDtoToJSON(requestParameters['addFacultyDto']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => FacultyFromJSON(jsonValue));
    }

    /**
     * Create a faculty
     */
    async facultyControllerCreate(requestParameters: FacultyControllerCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Faculty> {
        const response = await this.facultyControllerCreateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get all faculties
     */
    async facultyControllerFindAllRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Faculty>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/faculty`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(FacultyFromJSON));
    }

    /**
     * Get all faculties
     */
    async facultyControllerFindAll(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Faculty>> {
        const response = await this.facultyControllerFindAllRaw(initOverrides);
        return await response.value();
    }

}
