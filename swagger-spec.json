{
  "openapi": "3.0.0",
  "paths": {
    "/api/alumni": {
      "get": {
        "operationId": "AlumniController_findAll",
        "parameters": [],
        "responses": {
          "default": {
            "description": "Returns all alumni",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Alumni"
                  }
                }
              }
            }
          }
        },
        "summary": "Get all alumni, enriched with location, graduations and roles",
        "tags": [
          "V1",
          "Alumni"
        ]
      },
      "post": {
        "operationId": "AlumniController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAlumniDto"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Returns the created alumni",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alumni"
                }
              }
            }
          }
        },
        "summary": "Create a new alumni",
        "tags": [
          "V1",
          "Alumni"
        ]
      }
    },
    "/api/alumni/geoJSON": {
      "get": {
        "operationId": "AlumniController_findAllGeoJSON",
        "parameters": [
          {
            "name": "groupBy",
            "required": true,
            "in": "query",
            "description": "How to group the data",
            "schema": {
              "example": "countries",
              "type": "string",
              "enum": [
                "countries",
                "cities"
              ]
            }
          },
          {
            "name": "courseIds",
            "required": false,
            "in": "query",
            "description": "The ID(s) of the course(s)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "conclusionYears",
            "required": false,
            "in": "query",
            "description": "The year(s) of conclusion(s)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "selectedYear",
            "required": false,
            "in": "query",
            "description": "The selected year",
            "schema": {
              "example": 2023,
              "type": "number"
            }
          },
          {
            "name": "compareYear",
            "required": false,
            "in": "query",
            "description": "The year to compare to",
            "schema": {
              "example": 2022,
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Returns all alumni to be displayed in the map",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeoJSONFeatureCollection"
                }
              }
            }
          }
        },
        "summary": "Get all alumni to be displayed in the map",
        "tags": [
          "V1",
          "Alumni"
        ]
      }
    },
    "/api/alumni/review": {
      "get": {
        "operationId": "AlumniController_getAlumniToReview",
        "parameters": [],
        "responses": {
          "default": {
            "description": "Returns all alumni submissions that need to be reviewed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AlumniExtended"
                  }
                }
              }
            }
          }
        },
        "summary": "Get all alumni submissions that need to be reviewed",
        "tags": [
          "V1",
          "Alumni"
        ]
      },
      "post": {
        "operationId": "AlumniController_markAsReviewed",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkAsReviewedDto"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Returns the alumni marked as reviewed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alumni"
                }
              }
            }
          }
        },
        "summary": "Mark an alumni as reviewed",
        "tags": [
          "V1",
          "Alumni"
        ]
      }
    },
    "/api/alumni/{id}": {
      "get": {
        "operationId": "AlumniController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Returns the alumni with the given id, enriched with location, graduations and roles",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alumni"
                }
              }
            }
          }
        },
        "summary": "Get alumni by id, enriched with location, graduations and roles",
        "tags": [
          "V1",
          "Alumni"
        ]
      }
    },
    "/api/alumni/verify-email": {
      "post": {
        "operationId": "AlumniController_verifyEmail",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailDto"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Returns the verified email"
          }
        },
        "summary": "Verify the email of the alumni by generating a token and sending it to the email",
        "tags": [
          "V1",
          "Alumni"
        ]
      }
    },
    "/api/alumni/verify-email/token": {
      "post": {
        "operationId": "AlumniController_verifyEmailToken",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailTokenDto"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Returns the status of the validation"
          }
        },
        "summary": "Validate the token against the email",
        "tags": [
          "V1",
          "Alumni"
        ]
      }
    },
    "/api/company": {
      "get": {
        "operationId": "CompanyController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "All companies"
          }
        },
        "summary": "Get all companies",
        "tags": [
          "V1",
          "Company"
        ]
      }
    },
    "/api/company/{id}": {
      "get": {
        "operationId": "CompanyController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Company by id"
          }
        },
        "summary": "Get company by id",
        "tags": [
          "V1",
          "Company"
        ]
      }
    },
    "/api/user/linkedinAuth": {
      "post": {
        "operationId": "UserController_linkedinAuth",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkedinAuthDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Authenticate a user with LinkedIn",
        "tags": [
          "V1",
          "User"
        ]
      }
    },
    "/api/files": {
      "post": {
        "operationId": "FileUploadController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Data to upload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadExtractionDto"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Returns the status of the upload",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "summary": "Upload a file",
        "tags": [
          "V1",
          "Files"
        ]
      }
    },
    "/api/course": {
      "get": {
        "operationId": "CourseController_find",
        "parameters": [
          {
            "name": "facultyId",
            "required": false,
            "in": "query",
            "description": "The id of the faculty",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Course status",
            "schema": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "INACTIVE"
              ]
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "Search by course name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Returns courses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseExtended"
                  }
                }
              }
            }
          }
        },
        "summary": "Get courses",
        "tags": [
          "V1",
          "Course"
        ]
      }
    },
    "/api/course/{id}": {
      "get": {
        "operationId": "CourseController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Returns a course",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseExtended"
                }
              }
            }
          }
        },
        "summary": "Get a course by id",
        "tags": [
          "V1",
          "Course"
        ]
      }
    },
    "/api/faculty": {
      "get": {
        "operationId": "FacultyController_findAll",
        "parameters": [],
        "responses": {
          "default": {
            "description": "Returns all faculties",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Faculty"
                  }
                }
              }
            }
          }
        },
        "summary": "Get all faculties",
        "tags": [
          "V1",
          "Faculty"
        ]
      }
    },
    "/api/admin/proxycurl-balance": {
      "get": {
        "operationId": "AdminController_getProxyCurlBalance",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ProxyCurl balance",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              }
            }
          }
        },
        "summary": "Get ProxyCurl balance",
        "tags": [
          "V1",
          "Admin"
        ]
      }
    },
    "/api/admin/brightdata-balance": {
      "get": {
        "operationId": "AdminController_getBrightDataBalance",
        "parameters": [],
        "responses": {
          "200": {
            "description": "BrightData balance",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              }
            }
          }
        },
        "summary": "Get BrightData balance",
        "tags": [
          "V1",
          "Admin"
        ]
      }
    }
  },
  "info": {
    "title": "API",
    "description": "API description",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "Company": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the company"
          },
          "name": {
            "type": "string",
            "description": "The name of the company"
          },
          "linkedinUrl": {
            "type": "object",
            "description": "The linkedin url of the company"
          },
          "roles": {
            "description": "The roles of the company",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "name",
          "roles"
        ]
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the role"
          },
          "startDate": {
            "format": "date-time",
            "type": "string",
            "description": "The start date of the role"
          },
          "endDate": {
            "type": "object",
            "description": "The end date of the role"
          },
          "seniorityLevel": {
            "type": "string",
            "description": "The seniority level of the role"
          },
          "Company": {
            "description": "The Company",
            "allOf": [
              {
                "$ref": "#/components/schemas/Company"
              }
            ]
          },
          "JobClassification": {
            "description": "The job classifications",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "Location": {
            "type": "object",
            "description": "The location of the role"
          }
        },
        "required": [
          "id",
          "startDate",
          "seniorityLevel",
          "Company",
          "JobClassification"
        ]
      },
      "LocationGeo": {
        "type": "object",
        "properties": {
          "city": {
            "type": "object",
            "description": "The city of the location"
          },
          "country": {
            "type": "object",
            "description": "The country of the location"
          },
          "latitude": {
            "type": "object",
            "description": "The latitude of the location"
          },
          "longitude": {
            "type": "object",
            "description": "The longitude of the location"
          }
        },
        "required": [
          "city",
          "country"
        ]
      },
      "Course": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the course"
          },
          "acronym": {
            "type": "string",
            "description": "The acronym of the course"
          }
        },
        "required": [
          "name",
          "acronym"
        ]
      },
      "Graduation": {
        "type": "object",
        "properties": {
          "conclusionYear": {
            "type": "object",
            "description": "The conclusion year of the graduation"
          },
          "Course": {
            "description": "The course of the graduation",
            "allOf": [
              {
                "$ref": "#/components/schemas/Course"
              }
            ]
          }
        },
        "required": [
          "conclusionYear",
          "Course"
        ]
      },
      "Alumni": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the alumni"
          },
          "firstName": {
            "type": "string",
            "description": "The first name of the alumni"
          },
          "lastName": {
            "type": "string",
            "description": "The last name of the alumni"
          },
          "fullName": {
            "type": "string",
            "description": "The full name of the alumni"
          },
          "linkedinUrl": {
            "type": "string",
            "description": "The linkedin url of the alumni"
          },
          "profilePictureUrl": {
            "type": "string",
            "description": "The profile picture of the alumni"
          },
          "source": {
            "type": "string",
            "description": "The source of the alumni",
            "enum": [
              "FORM_SUBMISSION",
              "ADMIN_IMPORT",
              "HONORARY_MEMBER"
            ]
          },
          "Roles": {
            "description": "The roles of the alumni",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          },
          "Location": {
            "description": "The current location of the alumni",
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationGeo"
              }
            ]
          },
          "Graduations": {
            "description": "The graduation status(es) of the alumni",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Graduation"
            }
          }
        },
        "required": [
          "id",
          "firstName",
          "lastName"
        ]
      },
      "GeoJSONFeature": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "Feature"
          },
          "geometry": {
            "type": "object"
          },
          "properties": {
            "type": "object"
          }
        },
        "required": [
          "type",
          "geometry",
          "properties"
        ]
      },
      "GeoJSONFeatureCollection": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "FeatureCollection"
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeoJSONFeature"
            }
          }
        },
        "required": [
          "type",
          "features"
        ]
      },
      "AlumniExtended": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the alumni"
          },
          "firstName": {
            "type": "string",
            "description": "The first name of the alumni"
          },
          "lastName": {
            "type": "string",
            "description": "The last name of the alumni"
          },
          "fullName": {
            "type": "string",
            "description": "The full name of the alumni"
          },
          "linkedinUrl": {
            "type": "string",
            "description": "The linkedin url of the alumni"
          },
          "profilePictureUrl": {
            "type": "string",
            "description": "The profile picture of the alumni"
          },
          "source": {
            "type": "string",
            "description": "The source of the alumni",
            "enum": [
              "FORM_SUBMISSION",
              "ADMIN_IMPORT",
              "HONORARY_MEMBER"
            ]
          },
          "Roles": {
            "description": "The roles of the alumni",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          },
          "Location": {
            "description": "The current location of the alumni",
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationGeo"
              }
            ]
          },
          "Graduations": {
            "description": "The graduation status(es) of the alumni",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Graduation"
            }
          },
          "isInGroup": {
            "type": "boolean",
            "description": "Whether the alumni is in a group"
          },
          "hasSigarraMatch": {
            "type": "boolean",
            "description": "Whether the alumni has a sigarra match"
          },
          "wasReviewed": {
            "type": "boolean",
            "description": "Whether the alumni submission has been reviewed by the admin"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "The date and time the alumni submission was created"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "The date and time the alumni submission was updated"
          }
        },
        "required": [
          "id",
          "firstName",
          "lastName"
        ]
      },
      "MarkAsReviewedDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the alumni to mark as reviewed"
          }
        },
        "required": [
          "id"
        ]
      },
      "CourseCompletion": {
        "type": "object",
        "properties": {
          "courseId": {
            "type": "string",
            "description": "The ID of the course"
          },
          "conclusionYear": {
            "type": "number",
            "description": "The year of conclusion of the course"
          }
        },
        "required": [
          "courseId",
          "conclusionYear"
        ]
      },
      "CreateAlumniDto": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "description": "The full name of the user"
          },
          "personalEmail": {
            "type": "string",
            "description": "The personal email of the user"
          },
          "linkedinUrl": {
            "type": "string",
            "description": "The LinkedIn URL of the user"
          },
          "courses": {
            "description": "The courses the user has completed",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CourseCompletion"
            }
          },
          "facultyId": {
            "type": "string",
            "description": "The faculty ID of the user"
          }
        },
        "required": [
          "fullName",
          "linkedinUrl",
          "courses",
          "facultyId"
        ]
      },
      "VerifyEmailDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "The email of the alumni"
          }
        },
        "required": [
          "email"
        ]
      },
      "VerifyEmailTokenDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "The email of the alumni"
          },
          "token": {
            "type": "string",
            "description": "The OTP token of the alumni"
          }
        },
        "required": [
          "email",
          "token"
        ]
      },
      "LinkedinAuthDto": {
        "type": "object",
        "properties": {
          "person_id": {
            "type": "string",
            "description": "A unique identifying value for the member. Referenced as personId in other API documentation pages."
          },
          "first_name": {
            "type": "string",
            "description": "The first name of the member."
          },
          "last_name": {
            "type": "string",
            "description": "The first name of the member."
          },
          "institutional_email": {
            "type": "string",
            "description": "The personal email of the member."
          },
          "profile_picture_url": {
            "type": "string",
            "description": "The URL of the member's profile picture."
          }
        },
        "required": [
          "person_id",
          "first_name",
          "last_name"
        ]
      },
      "UploadExtractionDto": {
        "type": "object",
        "properties": {
          "faculty_id": {
            "type": "string"
          },
          "course_id": {
            "type": "string"
          }
        },
        "required": [
          "faculty_id",
          "course_id"
        ]
      },
      "CourseExtended": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the course"
          },
          "acronym": {
            "type": "string",
            "description": "The acronym of the course"
          },
          "id": {
            "type": "string",
            "description": "The id of the course"
          },
          "startYear": {
            "type": "number",
            "description": "The start year of the course"
          },
          "endYear": {
            "type": "object",
            "description": "The end year of the course, if it is not active"
          },
          "status": {
            "type": "object",
            "description": "The status of the course"
          },
          "facultyId": {
            "type": "string",
            "description": "The faculty id of the course"
          },
          "nameInt": {
            "type": "object",
            "description": "The name of the course in the international language"
          },
          "courseType": {
            "type": "object",
            "description": "The type of the course"
          }
        },
        "required": [
          "name",
          "acronym",
          "id",
          "startYear",
          "status",
          "facultyId",
          "courseType"
        ]
      },
      "Faculty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "The local name of the faculty",
            "example": "Faculdade de Engenharia da Universidade do Porto"
          },
          "nameInt": {
            "type": "object",
            "description": "The international name of the faculty",
            "example": "Faculty of Engineering of the University of Porto"
          },
          "acronym": {
            "type": "string",
            "description": "The acronym of the faculty",
            "example": "FEUP"
          }
        },
        "required": [
          "id",
          "name",
          "nameInt",
          "acronym"
        ]
      }
    }
  }
}